{
 :linters
 {:unused-binding
  {:exclude-destructured-keys-in-fn-args true
   :exclude-destructured-as              true}


  :unused-namespace
  {:exclude [
             clojure.spec.alpha
             clojure.java.io
             clojure.java.shell
             clojure.string
             clojure.test
             reitit.core
             taoensso.carmine
             ]}
  :unused-referred-var
  {:exclude {clojure.test [is are deftest testing]}}


  :lint-as
  {
   clojure.core.cache/defcache clojure.core/defrecord

   rum.core/defc  clj-kondo.lint-as/def-catch-all
   rum.core/defcc clj-kondo.lint-as/def-catch-all
   rum.core/defcs clj-kondo.lint-as/def-catch-all

   garden.def/defcssfn           clojure.core/def
   garden.def/defrule            clj-kondo.lint-as/def-catch-all
   user.garden.patch/defstylesfn clojure.core/defn
   }


  :skip-comments true


  :clojure-lsp/unused-public-var {:level   :warning
                                  :exclude #{tools-user.core.alpha}}
  }}
